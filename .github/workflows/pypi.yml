name: Publish to PYPI

on:
  push:
    branches: [ master ]

jobs:
  manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose
    - name: Setup.py hack
      run: |
        echo "[install]" > python/setup.cfg
        echo "install_lib=libdecord.so" >> python/setup.cfg
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m'
        build-requirements: 'numpy'
        pre-build-command: 'sh ../tools/build_manylinux2010.sh'
        package-path: 'python'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Sanity test
      run: |
        pwd
        ls ./python/dist/
        find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl.whl" -exec sh -c "python -m pip install '{}' --force-reinstall" \;
        python -m pip install ./python/dist/decord*
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Publish wheels to PyPI
      run: |
        ls ./python/dist/*
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.16.x'
    - name: Build library and wheel
      run: |
        brew install ffmpeg
        mkdir build && cd build && cmake .. -DUSE_CUDA=OFF && make -j4 && cd ..
        pwd
        ls build/
    - name: Sanity Test
      run: |
        pwd
        ls ./python/dist/
        find ./python/dist/ -type f -iname "decord*.whl" -exec sh -c "python -m pip install '{}'" \;
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Publish to PYPI
      run: |
        ls ./python/dist/*
  windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Download ffmpeg libs
      run: |
        curl -O -L https://github.com/zhreshold/decord-distro/files/5314603/ffmpeg-4.2.1-win64-dev.zip
        curl -O -L https://github.com/vmlankub/CloudFiles/raw/5ec06ef8b7568cc3b84d310ef146c63c5e693b54/ffmpeg/ffmpeg-4.2.1-win64-shared.zip
    - name: Extract ffmpeg libs
      shell: powershell
        run: Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-dev.zip -DestinationPath . && Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-shared.zip -DestinationPath .
    - name: configure
      run: mkdir build && cd build && cmake .. -DCMAKE_CXX_FLAGS="/DDECORD_EXPORTS" -DCMAKE_CONFIGURATION_TYPES="Release" -DFFMPEG_INCLUDE_DIR=..\ffmpeg-4.2.1-win64-dev\include -DFFMPEG_LIBRARIES=..\ffmpeg-4.2.1-win64-dev\lib\*.lib
    - name: build
      run: cmake --build build --config Release
    - name: test
      run: cd build && ctest
