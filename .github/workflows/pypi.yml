name: Publish to PYPI

on:
  push:
    branches: [ master ]

jobs:
  manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose
    - name: Setup.py hack
      run: |
        echo "[install]" > python/setup.cfg
        echo "install_lib=" >> python/setup.cfg
    - name: Build manylinux Python wheels
      uses: RalfG/python-wheels-manylinux-build@v0.3.3-manylinux2010_x86_64
      with:
        python-versions: 'cp36-cp36m'
        build-requirements: 'numpy'
        pre-build-command: 'sh ../tools/build_manylinux2010.sh'
        package-path: 'python'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Sanity test
      run: |
        pwd
        ls ./python/dist/
        sudo rm ./python/dist/decord-*-linux_x86_64.whl
        which python
        which pip
        find ./python/dist/ -type f -iname "decord*manylinux2010_x86_64.whl" -exec sh -c "which python && python -m pip install '{}' --force-reinstall" \;
        python -c "import decord; print(decord.__version__)"
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Publish wheels to PyPI
      run: |
        ls ./python/dist/*
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine nose wheel
    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.4
      with:
        cmake-version: '3.16.x'
    - name: Setup.py hack
      run: |
        echo "[install]" > python/setup.cfg
        echo "install_lib=" >> python/setup.cfg
    - name: Download FFMPEG
      run: |
        curl -O -L https://github.com/dmlc/decord/releases/download/v0.1.0/ffmpeg-4.0.2-macos-10.9-shared.zip
        unzip ffmpeg-4.0.2-macos-10.9-shared.zip -d ./ffmpeg-4.0.2-macos
        ls ./ffmpeg-4.0.2-macos/build
    - name: Build library and wheel
      run: |
        FFMPEG_DIR="$PWD"/ffmpeg-4.0.2-macos/build
        mkdir build && cd build && cmake .. -DUSE_CUDA=OFF -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DFFMPEG_DIR="$FFMPEG_DIR" && make -j4 && cd ..
        ls -lh build/
        cd python
        python setup.py bdist_wheel
        find ./dist/ -type f -iname "decord*.whl" -exec sh -c 'mv $0 ${0/\10_14/10_9}' {} \;
    - name: Fix wheel by delocate
      run: |
        python -m pip install delocate
        ls -lh ./python/dist/*.whl
        find ./python/dist/ -type f -iname "decord*.whl" -exec sh -c "delocate-listdeps '{}'" \;
        mkdir -p ./python/dist/fixed_wheel
        cd ./python/dist/
        cp "$FFMPEG_DIR"/lib/libvpx*.dylib .
        find . -type f -iname "decord*.whl" -exec sh -c "delocate-wheel -w fixed_wheel -v '{}'" \;
        ls -lh ./fixed_wheel
    - name: Sanity Test
      run: |
        pwd
        ls ./python/dist/fixed_wheel
        find ./python/dist/fixed_wheel -type f -iname "decord*.whl" -exec sh -c "python -m pip install '{}'" \;
        python -m nose -v ./tests/python/unittests/test_video_reader.py
    - name: Publish to PYPI
      run: |
        ls -lh ./python/dist/fixed_wheel/
  windows:
    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'
        architecture: 'x64'
    - name: Download ffmpeg libs
      run: |
        curl -O -L https://github.com/zhreshold/decord-distro/files/5314603/ffmpeg-4.2.1-win64-dev.zip
        curl -O -L https://github.com/vmlankub/CloudFiles/raw/5ec06ef8b7568cc3b84d310ef146c63c5e693b54/ffmpeg/ffmpeg-4.2.1-win64-shared.zip
    - name: Extract ffmpeg libs
      shell: powershell
      run: Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-dev.zip -DestinationPath d:\ ; Expand-Archive -LiteralPath ffmpeg-4.2.1-win64-shared.zip -DestinationPath d:\
    - name: Configure
      run: |
        dir d:/ffmpeg-4.2.1-win64-dev/lib
        dir d:/ffmpeg-4.2.1-win64-dev/include
        cmake --version
        mkdir build && cd build
        cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_CXX_FLAGS="/DDECORD_EXPORTS" -DCMAKE_CONFIGURATION_TYPES="Release" -DFFMPEG_INCLUDE_DIR="d:/ffmpeg-4.2.1-win64-dev/include" -DFFMPEG_LIBRARIES="d:/ffmpeg-4.2.1-win64-dev/lib/*.lib" ..
    - name: Build
      run: |
        cmake --build build --config Release
    - name: Build wheel
      run: |
        python -m pip install pip --upgrade
        python -m pip install wheel nose twine
        cd python && python setup.py bdist_wheel
        dir ./dist/
    - name: Fix wheel deps
      shell: cmd
      run: |
        FOR /F "tokens=* USEBACKQ" %%F IN (`dir /b /a-d python\dist\decord*`) DO (SET wheel_name=%%F)
        echo wheel_name=%wheel_name%
        cd python\dist
        7z x "%wheel_name%" -ofixed_wheel
        dir fixed_wheel\decord
        xcopy /Y d:\ffmpeg-4.2.1-win64-shared\bin\*.dll fixed_wheel\decord
        copy c:\windows\system32\MSVCP140.dll fixed_wheel\decord
        copy c:\windows\system32\VCRUNTIME140.dll fixed_wheel\decord
        mkdir output
        7z a output\%wheel_name% ./fixed_wheel/*
    - name: Sanity test
      shell: cmd
      run: |
        FOR /F "tokens=* USEBACKQ" %%F IN (`dir /b /a-d python\dist\output\decord*`) DO (SET wheel_name=%%F)
        echo wheel_name=%wheel_name%
        cd python\dist\output
        python -m pip install --force-reinstall %wheel_name%
        python -m nose -v ../../../tests/python/unittests/test_video_reader.py
